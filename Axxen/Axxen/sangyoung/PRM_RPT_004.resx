<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbtnPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>