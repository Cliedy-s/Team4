<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbtnPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>