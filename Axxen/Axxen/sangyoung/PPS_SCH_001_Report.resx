<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbtnPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>